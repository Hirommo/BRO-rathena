prontera,132,126,4	script	Sobrevivente	468,{
	mes "[ ^a60536"+ strnpcinfo(1) +"^000000 ]";
	mes "A meta do ^8B008BSobrevivente^000000 como o nome já diz é sobreviver, o último a ficar vivo leva o prêmio!";
	mes "^777777Prêmio do Evento:^000000";
	for( set .@w, 0; .@w < getarraysize($@premiacao_ITEM); set .@w, .@w + 1 ){
		set .@item, $@premiacao_ITEM[.@w];
		set .@quantidade, $@premiacao_QUANT[.@w];
		mes " ^FF0000»^000000 ^0000FF"+ getitemname(.@item) +".^000000";
	}
	next;
	switch( select("[^a60536»^000000] Participar.","[^a60536»^000000] Saír.") ){
		case 1:
			if (!$sobre_status){
				mes "[ ^a60536"+ strnpcinfo(1) +"^000000 ]";
				mes "O evento não está ativo no momento!";
				close;
			}
			for( set .@i,0; .@i < getarraysize($participantes$); set .@i,.@i + 1 ){
				if( $participantes$[.@i] == strcharinfo(0) ){
					message strcharinfo(0),"Você já está registrado. Aguarde!";
					close;
				}
			}
			set $participantes$[getarraysize($participantes$)], strcharinfo(0);
			message strcharinfo(0),"Você se registrou com êxito para participar do evento.";
			announce "["+strnpcinfo(1)+"]: O jogador » "+strcharinfo(0)+" « registrou-se para participar do evento!",bc_all|bc_blue;
			close;
		case 2: close;
	}
	OnInit:
		set .namenpc$, strnpcinfo(1);
		setarray $@mapevent$, "guild_vs5", 50, 47;	// = Configuração do mapa do evento
		set $@minparticipantes, 2;	// = Número mínimo de participantes para iniciar o evento
		set $@lvminGM, 60;	// = Level mínimo de GM para ligar/desligar o evento
		setarray $@premiacao_ITEM, 21003, 21024, 21023;	// = Itens
		setarray $@premiacao_QUANT, 5, 5, 1;	// = Quantidade de cada item
		callfunc ("resetEvento", $participantes$, $@mapevent$[0]);
		setarray .mapflag, 0, 1, 7, 8, 13, 22, 33, 34;
		for( set .@m,0; .@m < getarraysize(.mapflag); set .@m, .@m + 1 ){
			setmapflag $@mapevent$[0], .mapflag[.@m];
		}
		end;
}
-	script	Sobrevivente#Evt	-1,{
	OnWhisperGlobal:

	if( getgmlevel() >= 60 ){

		if( @whispervar0$ == "ativar" )
 
			donpcevent strnpcinfo(0) +"::OnStart"; 
	}
	end;

OnClock1700:
OnClock2100:
OnClock0100:
OnClock0700:
	OnStart:
	pvpoff $@mapevent$[0];
	set $sobre_status, 1;
	for(set .@t, 3; .@t > 0; set .@t, .@t - 1){
		if( !$sobre_status || agitcheck() || agitcheck2() ) callfunc ("resetEvento", $participantes$, $@mapevent$[0]);
			announce "["+strnpcinfo(1)+"]: O evento » Sobrevivente « iniciará em "+ .@t +" minuto(s)!",bc_all|bc_blue;
			sleep 60000;
	}
	if( getarraysize($participantes$) < $@minparticipantes ){
		announce "["+strnpcinfo(1)+"]: O mínimo de participantes requeridos não foi satisfeito!",bc_all|bc_blue;
		callfunc("resetEvento", $participantes$, $@mapevent$[0]);
		end;
	}
	announce "["+strnpcinfo(1)+"]: O evento está começando!",bc_all|bc_blue;
	set $sobre_status,0;
	for(set .@p, 0; .@p < getarraysize($participantes$); set .@p, .@p + 1){
		if ( isloggedin(getcharid(3, $participantes$[.@p])) ){
			warpchar $@mapevent$[0], atoi($@mapevent$[1]), atoi($@mapevent$[2]), getcharid(0, $participantes$[.@p]);
		}else{
			deletearray $participantes$[.@p], 1;
		}
	}
	sleep 10000;
	for(set .@c, 5; .@c > 0; set .@c, .@c - 1){
		mapannounce $@mapevent$[0], "["+strnpcinfo(1)+"]: Contagem para o inicio do evento: » "+ .@c +" «",bc_all|bc_blue;
		sleep 2000;
	}
	sleep 3000;
	mapannounce $@mapevent$[0], "["+strnpcinfo(1)+"]: Comecem!!! O último a sobreviver será o vencedor!",bc_all|bc_blue;
	sleep 3000;
	pvpon $@mapevent$[0];
	mapannounce $@mapevent$[0], "["+strnpcinfo(1)+"]: Jogadores reedistribuidos pela arena, que inicie a batalha pela sobrevivencia!",bc_all|bc_blue;
	mapwarp $@mapevent$[0], $@mapevent$[0], 0, 0;
	set .@timer,0;
	while( getarraysize($participantes$) > 1 ){
		if( .@timer == (12*3) ){	// = Caso queira aumentar o tempo de evento, modifique o número multiplicado por 12. Padrão: 3 minutos
			mapannounce $@mapevent$[0], "["+strnpcinfo(1)+"]: O tempo de duração do evento acabou!",bc_all|bc_blue;
			callfunc ("resetEvento", $participantes$, $@mapevent$[0]);
			end;
		}
		sleep 5000;
		set .@timer, .@timer + 1;
	}
	pvpoff $@mapevent$[0];
	if( getarraysize($participantes$) ){
		attachrid(getcharid(3, $participantes$[0]));
		if( strcharinfo(3) == $@mapevent$[0] ){
			announce "["+strnpcinfo(1)+"]: Temos um sobrevivente, é o jogador » "+ $participantes$[0] +" «",bc_all|bc_blue;
			for(set .@w, 0; .@w < getarraysize($@premiacaoITEM); set .@w, .@w + 1){
				set .@item, $@premiacao_ITEM[.@w];
				set .@quantidade, $@premiacao_QUANT[.@w];
				getitem .@item, .@quantidade;
				message strcharinfo(0), "[ Você recebeu "+ .@quantidade +"x "+ getitemname(.@item) +" ].";
			}
		}
		detachrid;
	}
	callfunc("resetEvento", $participantes$, $@mapevent$[0]);
	end;
	
	OnStop:
	announce "["+strnpcinfo(1)+"]: Evento foi encerrado!",bc_all|bc_blue;
	callfunc("resetEvento", $participantes$, $@mapevent$[0]);
	end;
}
-	script	sobre_events	-1,{
	OnPCLogoutEvent:
	OnPCDieEvent:
	if ( strcharinfo(3) == $@mapevent$[0] ){
		for (set .@i,0; .@i < getarraysize($participantes$); set .@i,.@i + 1) {
			if ( $participantes$[.@i] == strcharinfo(0) ){
				deletearray $participantes$[.@i], 1;
			}
		}
		mapannounce $@mapevent$[0], "[Sobrevivente]: » "+strcharinfo(0)+" « não está mais entre os sobreviventes!",bc_all|bc_blue;
		dispbottom "[ Você morreu e foi desclassificado do evento ].";
		warp getsavepoint(0), getsavepoint(1), getsavepoint(2);
		sleep2 1000;
		atcommand "@alive";
	}
	end;
}
function	script	resetEvento	{
	deletearray getarg(0);
	set $sobre_status, 0;
	mapwarp getarg(1), "prt_smart", 156, 191;
	pvpoff getarg(1);
	return;
}